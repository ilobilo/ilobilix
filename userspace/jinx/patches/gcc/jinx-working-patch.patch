diff --git a/fixincludes/mkfixinc.sh b/fixincludes/mkfixinc.sh
index 7112f4d..7aadf83 100755
--- a/fixincludes/mkfixinc.sh
+++ b/fixincludes/mkfixinc.sh
@@ -12,6 +12,7 @@ target=fixinc.sh
 # Check for special fix rules for particular targets
 case $machine in
     i?86-*-cygwin* | \
+    *-mlibc* | \
     *-mingw32* | \
     powerpc-*-eabisim* | \
     powerpc-*-eabi*    | \
diff --git b/gcc/config/i386/ilobilix.h b/gcc/config/i386/ilobilix.h
new file mode 100644
index 0000000..e3017a9
--- /dev/null
+++ b/gcc/config/i386/ilobilix.h
@@ -0,0 +1,24 @@
+#undef TARGET_ILOBILIX
+#define TARGET_ILOBILIX 1
+
+#undef GCC_I386_ILOBILIX
+#define GCC_I386_ILOBILIX 1
+
+#define GNU_USER_LINK_EMULATION32 "elf_i386"
+#define GNU_USER_LINK_EMULATION64 "elf_x86_64"
+#define GNU_USER_LINK_EMULATIONX32 "elf32_x86_64"
+
+#define GNU_USER_DYNAMIC_LINKER64 "/usr/lib/ld.so"
+#define GNU_USER_DYNAMIC_LINKER32 "/dev/null"
+#define GNU_USER_DYNAMIC_LINKERX32 "/dev/null"
+
+#undef TARGET_OS_CPP_BUILTINS
+#define TARGET_OS_CPP_BUILTINS()         \
+  do {                                   \
+    builtin_define ("__ilobilix__");     \
+    builtin_define ("__mlibc__");        \
+    builtin_define ("__unix__");         \
+    builtin_assert ("system=ilobilix");  \
+    builtin_assert ("system=unix");      \
+    builtin_assert ("system=posix");     \
+  } while (0);
diff --git a/gcc/config.build b/gcc/config.build
index 7c80a0b..8fac7e4 100644
--- a/gcc/config.build
+++ b/gcc/config.build
@@ -45,7 +45,7 @@
 build_xm_file=
 build_xm_defines=
 build_exeext=
-build_install_headers_dir=install-headers-tar
+build_install_headers_dir=install-headers-cp
 build_file_translate=
 
 # System-specific settings.
diff --git a/gcc/config.gcc b/gcc/config.gcc
index 087aaa7..0bee278 100644
--- a/gcc/config.gcc
+++ b/gcc/config.gcc
@@ -879,6 +879,15 @@ case ${target} in
   rust_target_objs="${rust_target_objs} freebsd-rust.o"
   target_has_targetrustm=yes
   ;;
+*-*-*-mlibc)
+  extra_options="$extra_options gnu-user.opt"
+  gas=yes
+  gnu_ld=yes
+  default_use_cxa_atexit=yes
+  use_gcc_stdint=wrap
+  tmake_file="${tmake_file} t-slibgcc"
+  thread_file='posix'
+  ;;
 *-*-fuchsia*)
   native_system_header_dir=/include
   tmake_file="t-fuchsia"
@@ -2320,6 +2329,9 @@ i[34567]86-*-mingw* | x86_64-*-mingw*)
 			;;
 	esac
 	;;
+x86_64-*-ilobilix*)
+	tm_file="${tm_file} i386/unix.h i386/att.h elfos.h gnu-user.h glibc-stdint.h i386/x86-64.h i386/gnu-user-common.h i386/gnu-user64.h i386/ilobilix.h"
+	;;
 x86_64-*-fuchsia*)
 	tmake_file="${tmake_file} i386/t-x86_64-elf"
 	tm_file="${tm_file} i386/unix.h i386/att.h elfos.h newlib-stdint.h i386/i386elf.h i386/x86-64.h fuchsia.h"
diff --git a/gcc/cp/module.cc b/gcc/cp/module.cc
index 1deadcc..9b72332 100644
--- a/gcc/cp/module.cc
+++ b/gcc/cp/module.cc
@@ -1697,8 +1697,10 @@ elf_in::defrost (const char *name)
 	      set_error (errno);
 	  else
 	    {
+#ifndef __ilobilix__
 	      if (madvise (mapping, hdr.pos, MADV_RANDOM))
 		goto fail;
+#endif
 
 	      /* These buffers are never NULL in this case.  */
 	      strtab.buffer = mapping + strtab.pos;
@@ -1808,8 +1810,10 @@ elf_in::begin (location_t loc)
     }
   /* We'll be hopping over this randomly.  Some systems declare the
      first parm as char *, and other declare it as void *.  */
+#ifndef __ilobilix__
   if (madvise (reinterpret_cast <char *> (mapping), size, MADV_RANDOM))
     goto fail;
+#endif
 
   hdr.buffer = (char *)mapping;
 #else
diff --git a/libatomic/configure.tgt b/libatomic/configure.tgt
index 6db039d..e4fc391 100644
--- a/libatomic/configure.tgt
+++ b/libatomic/configure.tgt
@@ -151,7 +151,7 @@ case "${target}" in
   *-*-linux* | *-*-gnu* | *-*-k*bsd*-gnu \
   | *-*-netbsd* | *-*-freebsd* | *-*-openbsd* | *-*-dragonfly* \
   | *-*-solaris2* | *-*-sysv4* | *-*-irix6* | *-*-osf* | *-*-hpux11* \
-  | *-*-darwin* | *-*-aix* | *-*-cygwin*)
+  | *-*-darwin* | *-*-aix* | *-*-cygwin* | *-*-mlibc*)
 	# POSIX system.  The OS is supported.
 	config_path="${config_path} posix"
 	;;
diff --git a/libcpp/Makefile.in b/libcpp/Makefile.in
index bb07e46..821fe80 100644
--- a/libcpp/Makefile.in
+++ b/libcpp/Makefile.in
@@ -32,10 +32,10 @@ AUTOCONF = @AUTOCONF@
 AUTOHEADER = @AUTOHEADER@
 CATALOGS = $(patsubst %,po/%,@CATALOGS@)
 CC = @CC@
-CFLAGS = @CFLAGS@
+override CFLAGS := @CFLAGS@
 WARN_CFLAGS = @warn@ @c_warn@ @WARN_PEDANTIC@ @WERROR@
 CXX = @CXX@
-CXXFLAGS = @CXXFLAGS@
+override CXXFLAGS := @CXXFLAGS@
 WARN_CXXFLAGS = @warn@ @WARN_PEDANTIC@ @WERROR@
 CPP = @CPP@
 CPPFLAGS = @CPPFLAGS@
@@ -45,7 +45,7 @@ INCINTL = @INCINTL@
 INSTALL_DATA = @INSTALL_DATA@
 INSTALL_PROGRAM = @INSTALL_PROGRAM@
 INSTALL_SCRIPT = @INSTALL_SCRIPT@
-LDFLAGS = @LDFLAGS@
+override LDFLAGS := @LDFLAGS@
 LIBICONV = @LIBICONV@
 LIBINTL = @LIBINTL@
 PACKAGE = @PACKAGE@
diff --git a/libgcc/config.host b/libgcc/config.host
index 6a88ee5..86bd7f3 100644
--- a/libgcc/config.host
+++ b/libgcc/config.host
@@ -310,6 +310,11 @@ case ${host} in
   tmake_file="$tmake_file t-crtstuff-pic t-libgcc-pic t-eh-dw2-dip t-slibgcc t-slibgcc-fuchsia"
   extra_parts="crtbegin.o crtend.o"
   ;;
+*-*-*-mlibc)
+  extra_parts="$extra_parts crtbegin.o crtbeginS.o crtend.o crtendS.o"
+  tmake_file="$tmake_file t-crtstuff-pic"
+  tmake_file="$tmake_file t-slibgcc t-slibgcc-gld t-slibgcc-elf-ver t-libgcc-pic"
+  ;;
 *-*-linux* | frv-*-*linux* | *-*-kfreebsd*-gnu | *-*-gnu* | *-*-kopensolaris*-gnu | *-*-uclinuxfdpiceabi)
   tmake_file="$tmake_file t-crtstuff-pic t-libgcc-pic t-eh-dw2-dip t-slibgcc t-slibgcc-gld t-slibgcc-elf-ver t-linux"
   extra_parts="crtbegin.o crtbeginS.o crtbeginT.o crtend.o crtendS.o"
@@ -767,6 +772,10 @@ x86_64-*-elf* | x86_64-*-rtems*)
 x86_64-*-fuchsia*)
 	tmake_file="$tmake_file t-libgcc-pic"
 	;;
+x86_64-*-*-mlibc)
+	extra_parts="$extra_parts crtprec32.o crtprec64.o crtprec80.o crtfastmath.o"
+	tmake_file="$tmake_file i386/t-crtpc t-crtfm i386/t-crtstuff t-dfprules"
+	;;
 i[34567]86-*-dragonfly*)
 	tmake_file="${tmake_file} i386/t-dragonfly i386/t-crtstuff"
 	md_unwind_header=i386/dragonfly-unwind.h
diff --git a/libstdc++-v3/configure b/libstdc++-v3/configure
index 819a1d8..52df448 100755
--- a/libstdc++-v3/configure
+++ b/libstdc++-v3/configure
@@ -38856,7 +38856,7 @@ $as_echo "#define HAVE_TLS 1" >>confdefs.h
 
   fi
     ;;
-  *-linux* | *-uclinux* | *-gnu* | *-kfreebsd*-gnu | *-cygwin* | *-solaris*)
+  *-linux* | *-uclinux* | *-gnu* | *-kfreebsd*-gnu | *-cygwin* | *-solaris* | *-mlibc*)
 
   # All these tests are for C++; save the language and the compiler flags.
   # The CXXFLAGS thing is suspicious, but based on similar bits previously
